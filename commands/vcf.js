/**
 * PRINCE FAVE MDX - WhatsApp Bot
 * Group VCF Command (Fixed)
 * 
 * Generates a VCF file of all group members
 * and adds the owner's contact.
 * 
 * Copyright (c) 2025 C.O TECH
 */

const fs = require('fs');
const path = require('path');

async function groupVcfCommand(sock, chatId, message) {
    try {
        // Fetch group metadata
        const groupMetadata = await sock.groupMetadata(chatId);
        const participants = groupMetadata.participants;

        // Start building VCF content
        let vcfContent = '';

        // Add your contact (OWNER)
        vcfContent +=
`BEGIN:VCARD
VERSION:3.0
FN:PRINCE FAVE MDX (OWNER)
TEL;TYPE=CELL:+2349129279369
END:VCARD
`;

        // Loop through group members and add their contact
        for (let participant of participants) {
            const phone = participant.id.split('@')[0];

            // Skip if it's your own number (already added)
            if (phone === '2349129279369') continue;

            // Use pushName if available, fallback to number
            const name = participant?.pushName || `+${phone}`;

            vcfContent +=
`BEGIN:VCARD
VERSION:3.0
FN:${name}
TEL;TYPE=CELL:+${phone}
END:VCARD
`;
        }

        // Save to a temporary file
        const vcfFileName = path.join(__dirname, 'group_contacts.vcf');
        fs.writeFileSync(vcfFileName, vcfContent);

        // Send VCF as document
        await sock.sendMessage(chatId, {
            document: fs.readFileSync(vcfFileName),
            fileName: 'PRINCE_FAVE_MDX_GROUP.vcf',
            mimetype: 'text/x-vcard',
            caption: 'üìá Group contacts generated by *PRINCE FAVE MDX*'
        }, { quoted: message });

        // Delete file after sending
        fs.unlinkSync(vcfFileName);

    } catch (err) {
        console.error("VCF Command Error:", err);
        await sock.sendMessage(chatId, { text: '‚ùå Failed to generate VCF.' }, { quoted: message });
    }
}

module.exports = { groupVcfCommand };
